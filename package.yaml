name:        static-text
version:     "0.2.0.2"
synopsis:    Lists, Texts, ByteStrings and Vectors of statically known length

description: static-text provides type-level safety for basic operations on
             string-like types (finite lists of elements), such as Data.Text,
             String (and all lists), Data.ByteString and Data.Vector. Use it
             when you need static guarantee on lengths of strings produced in your
             code.

github:      dzhus/static-text
license:     BSD3
author:      Dmitry Dzhus
maintainer:  dima@dzhus.org
category:    Data, Text, Type System

extra-source-files:
  - CHANGELOG.md
  - README.md

ghc-options:
  - -Wall
  - -Wcompat

dependencies:
  - base < 5
  - template-haskell

library:
  source-dirs: src
  exposed-modules:
    - Data.StaticText
    - Data.StaticText.Class
    - Data.StaticText.TH

  when:
    - condition: flag(bytestring)
      cpp-options: -DWITH_BS
      dependencies:
        - bytestring
    - condition: flag(text)
      cpp-options: -DWITH_TEXT
      dependencies:
        - text
    - condition: flag(vector)
      cpp-options: -DWITH_VECTOR
      dependencies:
        - vector

flags:
  bytestring:
    description: Build interface for ByteString
    manual: false
    default: true
  text:
    description: Build interface for Text
    manual: false
    default: true
  vector:
    description: Build interface for Vector
    manual: false
    default: true

tests:
  static-text-example:
    source-dirs: tests
    main: Main.hs
    dependencies:
      - bytestring
      - static-text
      - tasty
      - tasty-hunit

  static-text-doctests:
    source-dirs: tests
    main: doctest-driver.hs
    ghc-options: -threaded
    dependencies:
      - doctest
      - doctest-discover >= 0.1.0.8

  readme:
    main: README.lhs
    ghc-options:  -pgmL markdown-unlit
    dependencies:
      - bytestring
      - markdown-unlit
      - static-text
