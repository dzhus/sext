name:        sext
version:     "0.1.2"
synopsis:    Lists, Texts, ByteStrings, and Vectors with type-encoded length

description: Sext (/s/tatic t/ext/) provides type-level safety for
             basic operations on string-like types (finite lists of
             elements). Use it when you need static guarantee on
             lengths of strings produced in your code.

github:      dzhus/sext
license:     BSD3
author:      Dmitry Dzhus
maintainer:  dima@dzhus.org
category:    Data, Text, Type System

extra-source-files:
  - CHANGELOG.md

ghc-options:
  - -Wall

dependencies:
  - base < 5
  - template-haskell

library:
  source-dirs: src
  ghc-options: -Wall
  exposed-modules:
    - Data.Sext
    - Data.Sext.Class
    - Data.Sext.TH

  when:
    - condition: flag(bytestring)
      cpp-options: -DWITH_BS
      dependencies:
        - bytestring
    - condition: flag(text)
      cpp-options: -DWITH_TEXT
      dependencies:
        - text
    - condition: flag(vector)
      cpp-options: -DWITH_VECTOR
      dependencies:
        - vector

flags:
  bytestring:
    description: Build interface for ByteString
    manual: false
    default: true
  text:
    description: Build interface for Text
    manual: false
    default: true
  vector:
    description: Build interface for Vector
    manual: false
    default: true

tests:
  sext-example:
    source-dirs: tests
    main: Main.hs
    dependencies:
      - sext
